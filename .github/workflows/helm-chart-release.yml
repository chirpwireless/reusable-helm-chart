name: Helm Chart Release

on:
  workflow_dispatch:

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2

      - name: Run chart-testing (lint)
        run: ct lint --target-branch ${{ github.event.repository.default_branch }} --charts .

      - name: Run helm lint
        run: helm lint .

      - name: Run helm template validation
        run: helm template . --debug

  version-update:
    needs: lint-test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new_version: ${{ steps.semantic.outputs.new_release_version }}
      release_published: ${{ steps.semantic.outputs.new_release_published }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Semantic versioning
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 19
          dry_run: true
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Chart.yaml version
        if: steps.semantic.outputs.new_release_version != ''
        run: |
          NEW_VERSION=${{ steps.semantic.outputs.new_release_version }}
          CURRENT_VERSION=$(grep 'version:' Chart.yaml | sed 's/version: //')

          echo "Updating Chart.yaml version from $CURRENT_VERSION to $NEW_VERSION"
          sed -i "s/version: $CURRENT_VERSION/version: $NEW_VERSION/" Chart.yaml

          git add Chart.yaml
          git commit -m "chore: update chart version to $NEW_VERSION [skip ci]"
          git push origin HEAD:release

  release:
    needs: version-update
    if: needs.version-update.outputs.release_published == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up chart-releaser
        uses: helm/chart-releaser-action@v1
        with:
          charts_dir: .
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
